## ========================================
#  Base de données (Configuration)
## ========================================
spring.application.name=agenceEvenementielle
spring.datasource.url=jdbc:mysql://localhost:3306/event_management_db
spring.datasource.username=event_user
spring.datasource.password=Agence.2025
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
#pour éviter la stratégie de nommage avec tiret bas
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

## ========================================
#  SMTP Gmail  (Configuration)
## ========================================
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=hive.elegant@gmail.com
spring.mail.password=tmdq qjmk rsdx intr
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.starttls.required=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=5000
spring.mail.properties.mail.smtp.writetimeout=5000


## ===================================================================
#  JWT (Configuration)
## ====================================================================

# Change ça par une clé forte
jwt.secret=supercleSecretePourJWTsupercleSecretePourJWT
# 24 heures en ms (86400000 ms = 1 jour)
jwt.expiration=86400000


## ========================================
#  Logs (Configuration)
## ========================================
logging.file.name=logs/application.log
#Niveau de logs
logging.level.root=INFO
logging.level.tn.weeding.agenceevenementielle=DEBUG
logging.level.org.springframework.security=DEBUG
# Format des logs dans le fichier
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n
# Rotation automatique des logs
# Crée un nouveau fichier quand il atteint 10MB
logging.logback.rollingpolicy.max-file-size=10MB
# Garde maximum 5 fichiers de logs
logging.logback.rollingpolicy.max-history=5

# Taille totale maximum des logs : 50MB
logging.logback.rollingpolicy.total-size-cap=50MB


## ========================================
#  SWAGGER (Configuration)
## ========================================
springdoc.swagger-ui.operationsSorter=method
springdoc.swagger-ui.tagsSorter=alpha




# ========================================
# Google OAuth2 Configuration
# ========================================

# Client ID (récupéré depuis Google Cloud Console)
spring.security.oauth2.client.registration.google.client-id=119857019741-cst03g1cmiuml2nsecrghen5pp0m4bvi.apps.googleusercontent.com

# Client Secret (récupéré depuis Google Cloud Console)
spring.security.oauth2.client.registration.google.client-secret=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

# Scopes : informations demandées à Google
spring.security.oauth2.client.registration.google.scope=profile,email

# URL de redirection après authentification Google
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.google.client-name=Google

# Provider Google (configuration automatique par Spring Boot)
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

# Taille maximale du fichier à televerser
spring.servlet.multipart.max-file-size=5MB
spring.servlet.multipart.max-request-size=5MB

spring.cache.type=caffeine
spring.cache.caffeine.spec=maximumSize=500,expireAfterWrite=30m